

fn square :: (x : i32) -> (i32)
{
	return x * x;
}

fn fib :: (i : i32) -> (i32)
{
	if (i <= 1)
	{
		return 1;
	}
	return fib(i - 1) + fib(i - 2);
}

fn multi_arg :: 
	(i0 : i32, 
	i1 : i32, 
	i2 : i32, 
	i3 : i32, 
	i4 : i32, 
	i5 : i32)
 	-> (i32)
{
	return i4;
}

fn main :: () -> (i32)
{
	a := 7; // comment

	b := 4 + a * 3 + -(22 + -1);
	//b = 3 * 4 + 5;

	{
		d := 24 * a;
		b := 100;
	}
	
	//b <<= 2;
	//b = b << 2;

	b += a *= 19;

	// a == 133
	// b == 137

	if (b == 0)
		b := 200;
	else if (b > 100)
		b = 100;
	else
		b = 0;


	v := 7;
	
	x := 0;
	while (x < 10)
	{
		v *= 2;
		x += 1;
	}

	// v == 7168

	// comment
	c := 33 >= 10;

	b = square(square(4) * 2);

	b = fib(7); // 1 1 2 3 5 8 13 21 

	//b = multi_arg(10, 11, 12, 13, 14, 15);

	return b;
}
